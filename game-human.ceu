#ifndef _GAME_HUMAN_CEU
#define _GAME_HUMAN_CEU

#include "lua.ceu"
#include "sdl.ceu"
#include "sdl-gfx.ceu"

#include "map.ceu"
#include "game-nav.ceu"
#include "game-fortify.ceu"
#include "game-attack.ceu"

input void SDL_REDRAW;
input _SDL_KeyboardEvent* SDL_KEYDOWN;
input void SDL_MOUSEBUTTONDOWN;

class GameHuman with
    var Map& map;
    var int  me    = 0;

    event void ok;
do
    _assert(_REN != null);

    _assert(this.me  != 0);

    // last "fortify" state
    var int state = [[ #STATES ]];
    [[
        assert(STATES[#STATES].type == 'fortify' or
               STATES[#STATES].type == 'attack')
    ]]

    // show navigate => (fortify||attack)

    // avoid navigation for "0st" state
    if state > 1 then
        var GameNav nav with
            _.map = map;
            _.me  = me;
        end;
        await nav.ok;
    end

    // current state type
    var bool fortify? = [[ STATES[@state].type == 'fortify' ]];
    var bool attack?  = [[ STATES[@state].type == 'attack'  ]];

    // state = FORTIFY
    if fortify? then
        var GameFortify fort with
            _.map = map;
            _.me  = me;
        end;
        await fort.ok;

    // state = ATTACK
    else/if attack? then
        var GameAttack att with
            _.map = map;
            _.me  = me;
        end;
        await att.ok;

    // ERROR
    else
        _assert(0);
    end

    emit this.ok;
end

#ifdef __GAME_HUMAN_CEU

#include "all.ceu"

par/or do
    await SDL_QUIT;
/*** SIMUL
with
    @include(simul.ceu)
***/
with
    every SDL_REDRAW do
        _boxRGBA(_REN, 0,0, _REN_W,_REN_H, 0,0,0, 0xFF);
    end
with
    do
        [[ dofile 'g1.lua' ]];
        var Map map;
        do
            var GameHuman human with
                _.map = map;
                _.me  = 1;
            end;
            await human.ok;
        end
        do
            var GameHuman human with
                _.map = map;
                _.me  = 2;
            end;
            await human.ok;
        end
    end

    do
        [[ dofile 'g4.lua' ]];
        var Map map;
        do
            var GameHuman human with
                _.map = map;
                _.me  = 1;
            end;
            await human.ok;
        end
        do
            var GameHuman human with
                _.map = map;
                _.me  = 2;
            end;
            await human.ok;
        end
    end

with
    every SDL_REDRAW do
        _SDL_RenderPresent(_REN);
    end
end

escape 0;

#endif
#endif
