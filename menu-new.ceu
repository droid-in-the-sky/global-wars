#ifndef _MENU_NEW_CEU
#define _MENU_NEW_CEU

#include "lua.ceu"
#include "sdl.ceu"
#include "sdl-gfx.ceu"

#include "colors.ceu"
#include "ui.ceu"
#include "ui-grid.ceu"
#include "ui-texture.ceu"

input void SDL_REDRAW;

class MenuNewPlayer with
    var int     n    = 0;
    var UIGrid* grid = null;
do
    _assert(_REN       != null);
    _assert(_BGS       != null);
    _assert(_TEX_HUMAN != null);
    _assert(_TEX_AI    != null);
    _assert(_TEX_NONE  != null);

    _assert(this.n    != 0);
    _assert(this.grid != null);

    var int first? = 1;

    loop do
        // human
        if (not first?) or (this.n == 1) then
            do
                var UITexture ui with
                    this.ren    = _REN;
                    this.tex    = _TEX_HUMAN;
                    this.clr_bg = _BGS[n];
                end;
                this.grid:_go_ui(this.n-1, &ui)
                    finalize with nothing; end; // grid > ui
                await ui.ok_clicked;
            end
        end

        // ai
        do
            var UITexture ui with
                this.ren    = _REN;
                this.tex    = _TEX_AI;
                this.clr_bg = _BGS[n];
            end;
            this.grid:_go_ui(this.n-1, &ui)
                finalize with nothing; end; // grid > ui
            await ui.ok_clicked;
        end

        // none
        do
            var UITexture ui with
                this.ren    = _REN;
                this.tex    = _TEX_NONE;
                this.clr_bg = _BGS[n];
            end;
            this.grid:_go_ui(this.n-1, &ui)
                finalize with nothing; end; // grid > ui
            await ui.ok_clicked;
        end

        first? = 0;
    end
end

class MenuNew with
    event void ok;
do
    _assert(_REN != null);
    _assert(_L   != null);

    var UIGrid grid_ps with
        this.ren = _REN;
        this.lay_lins = 2;
        this.lay_cols = 3;
        this.lay = _MenuNew_grid_ps;
        this.uis_n = 6;
        this.spc_x = 20;
        this.spc_y = 20;
        native do
            int MenuNew_grid_ps[] = {
                0, 1, 2,
                3, 4, 5
            };
        end
    end;

    var _SDL_Rect r;        // whole screen
        r.x = 0;
        r.y = 0;
        r.w = _REN_W;
        r.h = _REN_H;
    grid_ps._go_rect(&r);

    var int i = 1;
    var MenuNewPlayer [6] ps with
        this.n    = i;
        this.grid = &grid_ps;
        i = i + 1;
    end;

    await FOREVER;
end

#ifdef __MENU_NEW_CEU

#include "all.ceu"

input void SDL_QUIT;

par/or do
    await SDL_QUIT;
/*** SIMUL
with
    @include(simul.ceu)
***/
with
    every SDL_REDRAW do
        _boxRGBA(_REN, 0,0, _REN_W,_REN_H, 0,0,0, 0xFF);
    end
with
    var MenuNew menu;
    await menu.ok;

with
    every SDL_REDRAW do
        _SDL_RenderPresent(_REN);
    end
end

return 0;

#endif
#endif
