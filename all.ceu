#ifndef _ALL_CEU
#define _ALL_CEU

native do
    lua_State*    L   = NULL;
    SDL_Renderer* REN = NULL;
    int REN_W, REN_H;
end

// SCREEN
    var _SDL_Window* win;
        finalize
            win = _SDL_CreateWindow("World Wars!",
                                500, 400, 800, 480, _SDL_WINDOW_SHOWN);
        with
            _SDL_DestroyWindow(win);
        end
    _SDL_GetWindowSize(win, &_REN_W, &_REN_H);

    _REN = _SDL_CreateRenderer(win, -1, 0);
    finalize with
        _SDL_DestroyRenderer(_REN);
    end

// LUA
    _L = _luaL_newstate();
    finalize with
        _lua_close(_L);
    end
    _lua_atpanic(_L, _ceu_lua_atpanic);
    _luaL_openlibs(_L);
#ifdef __ANDROID__
    _lua_pushboolean(_L, 1);           // [ 1 ]
#else
    _lua_pushboolean(_L, 0);           // [ 0 ]
#endif
    _lua_setglobal(_L, "__ANDROID__"); // [ ]

// FONT
    native do
        TTF_Font* FONT;
    end
    _TTF_Init();
        finalize with
            _TTF_Quit();
        end
    _FONT = _TTF_OpenFont("fnts/Deutsch.ttf", 20);
        finalize with
            _TTF_CloseFont(_FONT);
        end
    _assert(_FONT != null);

// TEXS
    native do
        SDL_Texture* TEX_HUMAN = NULL;
        SDL_Texture* TEX_AI    = NULL;
        SDL_Texture* TEX_NONE  = NULL;
        SDL_Texture* TEX_L     = NULL;
        SDL_Texture* TEX_R     = NULL;
        SDL_Texture* TEX_NO    = NULL;
        SDL_Texture* TEX_OK    = NULL;
    end
    _TEX_HUMAN = _IMG_LoadTexture(_REN, "imgs/human.png");
    finalize with
        _SDL_DestroyTexture(_TEX_HUMAN);
    end
    _TEX_AI = _IMG_LoadTexture(_REN, "imgs/ai.png");
    finalize with
        _SDL_DestroyTexture(_TEX_AI);
    end
    _TEX_NONE = _IMG_LoadTexture(_REN, "imgs/none.png");
    finalize with
        _SDL_DestroyTexture(_TEX_NONE);
    end
    _TEX_L = _IMG_LoadTexture(_REN, "imgs/left.png");
    finalize with
        _SDL_DestroyTexture(_TEX_L);
    end
    _TEX_R = _IMG_LoadTexture(_REN, "imgs/right.png");
    finalize with
        _SDL_DestroyTexture(_TEX_R);
    end
    _TEX_NO = _IMG_LoadTexture(_REN, "imgs/no.png");
    finalize with
        _SDL_DestroyTexture(_TEX_NO);
    end
    _TEX_OK = _IMG_LoadTexture(_REN, "imgs/ok.png");
    finalize with
        _SDL_DestroyTexture(_TEX_OK);
    end
    _assert(_TEX_HUMAN != null);
    _assert(_TEX_AI    != null);
    _assert(_TEX_NONE  != null);
    _assert(_TEX_L     != null);
    _assert(_TEX_R     != null);
    _assert(_TEX_NO    != null);
    _assert(_TEX_OK    != null);


// BGS
    native do
        SDL_Color* BGS[] = {
            NULL,
            &colors.white,
            &colors.blue,
            &colors.red,
            &colors.yellow,
            &colors.green,
            &colors.gray,
        };
    end

#endif
